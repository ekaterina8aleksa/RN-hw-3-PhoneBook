{"version":3,"sources":["components/Phonebook.module.css","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","utils/helpers.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handelChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","styles","label","type","placeholder","onChange","input","button","Component","ContactItem","onDelete","onClick","ContactList","contacts","onDeleteContact","list","map","id","key","item","Filter","finder","App","filter","formListener","addContact","readyContact","shortid","generate","isExist","some","contact","trim","toLowerCase","invalide","isNaN","toast","info","warn","success","deleteContact","contactId","prevState","changeFilter","getFilteredContacts","preparedContacts","includes","parsedContacts","localStorage","getItem","console","log","JSON","parse","error","Error","getContacts","prevProps","setItem","stringify","setContacts","visibleContacts","onAddContact","length","text","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfd2e261.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Phonebook_list__3NXK6\",\"text\":\"Phonebook_text__19biC\",\"button\":\"Phonebook_button__1QdMm\",\"label\":\"Phonebook_label__2waO7\",\"input\":\"Phonebook_input__23PbJ\",\"finder\":\"Phonebook_finder__3xUwV\",\"item\":\"Phonebook_item__1ia-7\",\"hidden\":\"Phonebook_hidden__GszIg\"};","import React, { Component } from \"react\";\nimport styles from \"../Phonebook.module.css\";\n\nclass ContactForm extends Component {\n    state = {\n        name: \" \",\n        number: \" \",\n    };\n\n    handelChange = (e) => {\n        const { name, value } = e.currentTarget;\n        this.setState({ [name]: value });\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.onSubmit(this.state);\n        this.reset();\n    };\n\n    reset = () => {\n        this.setState({ name: \"\", number: \"\" });\n    };\n\n    render() {\n        return (\n            <>\n                <h2>PhoneBook</h2>\n                <form onSubmit={this.handleSubmit}>\n                    <label className={styles.label}>\n                        Name\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            placeholder=\"Enter name...\"\n                            value={this.state.name}\n                            onChange={this.handelChange}\n                            className={styles.input}\n                        />\n                    </label>\n\n                    <label className={styles.label}>\n                        Phone Number\n                        <input\n                            type=\"tel\"\n                            name=\"number\"\n                            placeholder=\"Enter number...\"\n                            value={this.state.number}\n                            onChange={this.handelChange}\n                            className={styles.input}\n                        />\n                    </label>\n\n                    <lable>\n                        <button type=\"submit\" className={styles.button}>\n                            Add Contact\n                        </button>\n                    </lable>\n                </form>\n            </>\n        );\n    }\n}\n\nexport default ContactForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"../Phonebook.module.css\";\n\nconst ContactItem = ({ name, number, onDelete }) => {\n  return (\n    <>\n      {name}: {number}\n      <button type=\"button\" className={styles.button} onClick={onDelete}>\n        Delete\n      </button>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactItem from \"../ContactItem\";\nimport styles from \"../Phonebook.module.css\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <>\n      <ul className={styles.list}>\n        {contacts.map(({ name, number, id }) => (\n          <li key={id} className={styles.item}>\n            <ContactItem\n              id={id}\n              number={number}\n              name={name}\n              onDelete={() => onDeleteContact(id)}\n            />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default ContactList;\n","import React from \"react\";\nimport styles from \"../Phonebook.module.css\";\n\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.finder}>\n    Finder\n    <input\n      type=\"text\"\n      value={value}\n      placeholder=\"Search for...\"\n      onChange={onChange}\n      className={styles.input}\n    />\n  </label>\n);\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport { getContacts, setContacts } from \"./utils/helpers\";\nimport styles from \"./components/Phonebook.module.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass App extends Component {\n    state = {\n        contacts: [],\n        filter: \"\",\n    };\n\n    componentDidMount() {\n        const parsedContacts = getContacts(\"contacts\");\n        if (parsedContacts) {\n            this.setState({ contacts: parsedContacts });\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { contacts } = this.state;\n        if (contacts !== prevState.contacts) {\n            setContacts(\"contacts\", contacts);\n        }\n    }\n\n    formListener = ({ name, number }) => {\n        this.addContact(name, number);\n    };\n\n    addContact = (name, number) => {\n        const { contacts } = this.state;\n        const readyContact = {\n            name,\n            number,\n            id: shortid.generate(),\n        };\n\n        const isExist = contacts.some(\n            (contact) =>\n                contact.name.trim().toLowerCase() === name.trim().toLowerCase()\n        );\n\n        const invalide = isNaN(number);\n        if (isExist) {\n            toast.info(`${name} already exist (〒﹏〒) `);\n        } else if (name === \" \" || number === \" \") {\n            toast.warn(`Fill the form, please ＼(°o°)／ `);\n        } else if (invalide) {\n            toast.info(`${number} is invalide phone number 乁( •_• )ㄏ `);\n        } else {\n            toast.success(\" (๑˙❥˙๑) You added new contact!\");\n            this.setState(({ contacts }) => ({\n                contacts: [readyContact, ...contacts],\n            }));\n        }\n    };\n\n    deleteContact = (contactId) => {\n        this.setState((prevState) => ({\n            contacts: prevState.contacts.filter(\n                (contact) => contact.id !== contactId\n            ),\n        }));\n    };\n\n    changeFilter = (e) => {\n        this.setState({ filter: e.currentTarget.value });\n    };\n\n    getFilteredContacts = () => {\n        const { filter, contacts } = this.state;\n\n        const preparedContacts = filter.trim().toLowerCase();\n\n        return contacts.filter((contact) =>\n            contact.name.trim().toLowerCase().includes(preparedContacts)\n        );\n    };\n\n    render() {\n        const { contacts, filter } = this.state;\n        const visibleContacts = this.getFilteredContacts();\n\n        return (\n            <>\n                <ToastContainer />\n                <ContactForm\n                    onSubmit={this.formListener}\n                    onAddContact={this.addContact}\n                />\n                <h3>Contacts</h3>\n                {contacts.length >= 2 && (\n                    <Filter value={filter} onChange={this.changeFilter} />\n                )}\n\n                {visibleContacts.length > 0 ? (\n                    <ContactList\n                        contacts={visibleContacts}\n                        onDeleteContact={this.deleteContact}\n                    />\n                ) : contacts.length === 0 ? (\n                    <p className={styles.text}>There are no contacts</p>\n                ) : (\n                    <p className={styles.text}>Didn't find any contacts</p>\n                )}\n            </>\n        );\n    }\n}\nexport default App;\n","// import shortid from \"shortid\";\r\n\r\nexport const setContacts = (key, value) => {\r\n    try {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n        console.log(\"set to locale storage\");\r\n    } catch (error) {\r\n        throw new Error();\r\n    }\r\n};\r\n\r\nexport const getContacts = (key) => {\r\n    try {\r\n        const contacts = localStorage.getItem(key);\r\n        console.log(\"get contacts\");\r\n        return contacts ? JSON.parse(contacts) : null;\r\n    } catch (error) {\r\n        throw new Error();\r\n    }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}